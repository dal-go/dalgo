// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dal-go/dalgo/update (interfaces: Update)
//
// Generated by this command:
//
//	mockgen github.com/dal-go/dalgo/update Update
//

// Package mock_update is a generated GoMock package.
package mock_update

import (
	reflect "reflect"

	update "github.com/dal-go/dalgo/update"
	gomock "go.uber.org/mock/gomock"
)

// MockUpdate is a mock of Update interface.
type MockUpdate struct {
	ctrl     *gomock.Controller
	recorder *MockUpdateMockRecorder
	isgomock struct{}
}

// MockUpdateMockRecorder is the mock recorder for MockUpdate.
type MockUpdateMockRecorder struct {
	mock *MockUpdate
}

// NewMockUpdate creates a new mock instance.
func NewMockUpdate(ctrl *gomock.Controller) *MockUpdate {
	mock := &MockUpdate{ctrl: ctrl}
	mock.recorder = &MockUpdateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUpdate) EXPECT() *MockUpdateMockRecorder {
	return m.recorder
}

// FieldName mocks base method.
func (m *MockUpdate) FieldName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FieldName")
	ret0, _ := ret[0].(string)
	return ret0
}

// FieldName indicates an expected call of FieldName.
func (mr *MockUpdateMockRecorder) FieldName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FieldName", reflect.TypeOf((*MockUpdate)(nil).FieldName))
}

// FieldPath mocks base method.
func (m *MockUpdate) FieldPath() update.FieldPath {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FieldPath")
	ret0, _ := ret[0].(update.FieldPath)
	return ret0
}

// FieldPath indicates an expected call of FieldPath.
func (mr *MockUpdateMockRecorder) FieldPath() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FieldPath", reflect.TypeOf((*MockUpdate)(nil).FieldPath))
}

// Value mocks base method.
func (m *MockUpdate) Value() any {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Value")
	ret0, _ := ret[0].(any)
	return ret0
}

// Value indicates an expected call of Value.
func (mr *MockUpdateMockRecorder) Value() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Value", reflect.TypeOf((*MockUpdate)(nil).Value))
}
